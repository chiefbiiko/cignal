AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Drops:
    Description: |
      Coin list with optional drop percentage, fx "DOT,KSM:-20%,MOVR:-20%"
    Type: CommaDelimitedList

  Recipients:
    Description: Notification recipient email addresses, max count is 2
    Type: CommaDelimitedList

  LambdaBundleBucketName:
    Description: Lambda bundle bucket name
    Type: String

  LambdaBundleFilename:
    Description: Lambda bundle file name
    Type: String
    Default: lambda.zip

  LambdaMemorySize:
    Description: Lambda memory size in MB
    Type: Number
    Default: 128

  LambdaTimeout:
    Description: Lambdatimeout in seconds
    Type: Number
    Default: 3

  LambdaSchedule:
    Description: Lambda execution schedule
    Type: String
    Default: rate(7 minutes)

  LambdaLogRetentionDays:
    Description: Lambda log retention period in days
    Type: Number
    Default: 7

Resources:
  MemBucket:
    Type: AWS::S3::Bucket
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 2

 MemBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MemBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowLambdaGetPutObject
            Effect: Allow
            Principal:
              AWS: !GetAtt LambdaExecutionRole.Arn
            Action:
              - s3:GetObject
              - s3:PutObject
            Resource: !Sub arn:aws:s3:::${MemBucket}/*

          - Sid: AllowLambdaListBucket
            Effect: Allow
            Principal:
              AWS: !GetAtt LambdaExecutionRole.Arn
            Action: s3:ListBucket
            Resource: !GetAtt MemBucket.Arn

  LambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Sid: AllowAssumeRoleByLambda
              Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: LambdaExecutionPolicy
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Sid: AllowLogCreation
                  Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}-lambda

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaBundleBucketName
        S3Key: !Ref LambdaBundleFilename
      Environment:
        Variables:
          DROPS: !Ref Drops
          TOPIC_ARN: !Ref Topic
          MEM_BUCKET_NAME: !Ref MemBucket
      FunctionName: !Sub ${AWS::StackName}-lambda
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs14.x
      MemorySize: !Ref LambdaMemorySize
      Timeout: !Ref LambdaTimeout

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-lambda
      RetentionInDays: !Ref LambdaLogRetentionDays

  LambdaSchedule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: !Ref LambdaSchedule
      State: ENABLED
      Targets:
        - Arn: !GetAtt Lambda.Arn
          Id: LambdaSchedule

  Topic:
    Type: AWS::SNS::Topic
    Properties: 
      ContentBasedDeduplication: false
      DisplayName: !Ref AWS::StackName
      FifoTopic: false
      KmsMasterKeyId: !Ref AWS::NoValue
      Subscription: 
        - Endpoint: !Select [ "0", !Ref Recipients ]
          Protocol: email
        - Endpoint: !Select [ "1", !Ref Recipients ]
          Protocol: email
      TopicName: !Sub ${AWS::StackName}-topic